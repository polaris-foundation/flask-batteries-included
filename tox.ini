[tox]
envlist = lint,py39
source_package=flask_batteries_included
all_sources = {[tox]source_package} tests/
skipsdist = True

[flake8]
max-line-length = 100

[pytest]
filterwarnings =
    ignore::DeprecationWarning:jose
    ignore::DeprecationWarning:jinja2
    ignore::DeprecationWarning:marshmallow.fields

[testenv]
envdir = {toxworkdir}/py39
skip_install = true

setenv = ENVIRONMENT = DEVELOPMENT
    AUTH0_AUDIENCE = https://dhos-dev.draysonhealth.com/
    HS_KEY = secret
    PROXY_URL = http://localhost
    EPR_SERVICE_ADAPTER_ISSUER = https://epr.ouh.sensynehealth.com/
    REDIS_HOST=localhost
    REDIS_PORT=1234
    REDIS_PASSWORD=password
    REDIS_TIMEOUT=1234
    LOG_FORMAT=colour
    LOG_LEVEL=DEBUG


commands = poetry install -E pgsql -E apispec -v
           bandit -r {[tox]source_package} -lll
           safety check
           black --check {[tox]source_package} tests
           isort --profile black {[tox]source_package} tests/ --check-only
           mypy {[tox]source_package}
           coverage run --source {[tox]source_package} -m py.test {posargs}
           coverage report
           coverage xml -i -o coverage-reports/coverage.xml
allowlist_externals =
        bandit
        bash
        black
        coverage
        isort
        mypy
        poetry
        python
        safety
        true
list_dependencies_command = true


[testenv:lint]
description = Run black, isort, and mypy to clean up source files
commands =
       black {[tox]all_sources}
       isort --profile black {[tox]all_sources}
       mypy {[tox]source_package} tests/

[testenv:debug]
description = Run last failing unit test and invoke debugger on errors
commands =
    pytest --lf --pdb

[testenv:update]
description = Update poetry lock files
commands = poetry update
